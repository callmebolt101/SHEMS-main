{"ast":null,"code":"var _jsxFileName = \"/Users/bolt/Desktop/SHEMS/frontend/src/components/CustomerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../CustomerDashboard.css'; // Ensure CSS file is linked\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerDashboard = () => {\n  _s();\n  const [customer, setCustomer] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [locations, setLocations] = useState([]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId'); // Assuming you store userId in local storage upon login\n\n    const fetchData = async () => {\n      // Fetch customer details\n      try {\n        const customerResponse = await fetch(`http://localhost:8080/customer/${userId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const customerData = await customerResponse.json();\n        setCustomer(customerData);\n\n        // Fetch devices and locations if necessary\n        // ...\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    if (userId && token) {\n      fetchData();\n    } else {\n      console.log('User ID or Token not found');\n      // Handle the case when user ID or token is not available\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Customer Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard-content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerDashboard, \"ysy06PDkhQP59POhnvdCO/HkE5o=\");\n_c = CustomerDashboard;\nexport default CustomerDashboard;\nvar _c;\n$RefreshReg$(_c, \"CustomerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","CustomerDashboard","_s","customer","setCustomer","devices","setDevices","locations","setLocations","token","localStorage","getItem","userId","fetchData","customerResponse","fetch","headers","customerData","json","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bolt/Desktop/SHEMS/frontend/src/components/CustomerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../CustomerDashboard.css'; // Ensure CSS file is linked\n\nconst CustomerDashboard = () => {\n  const [customer, setCustomer] = useState(null);\n  const [devices, setDevices] = useState([]);\n  const [locations, setLocations] = useState([]);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userId = localStorage.getItem('userId'); // Assuming you store userId in local storage upon login\n\n    const fetchData = async () => {\n      // Fetch customer details\n      try {\n        const customerResponse = await fetch(`http://localhost:8080/customer/${userId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const customerData = await customerResponse.json();\n        setCustomer(customerData);\n\n        // Fetch devices and locations if necessary\n        // ...\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n\n    if (userId && token) {\n      fetchData();\n    } else {\n      console.log('User ID or Token not found');\n      // Handle the case when user ID or token is not available\n    }\n  }, []);\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"dashboard-header\">\n        <h1>Customer Details</h1>\n      </header>\n      <main className=\"dashboard-content\">\n        {/* ... Rest of the component */}\n      </main>\n    </div>\n  );\n};\n\nexport default CustomerDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,0BAA0B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAE/C,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B;MACA,IAAI;QACF,MAAMC,gBAAgB,GAAG,MAAMC,KAAK,CAAE,kCAAiCH,MAAO,EAAC,EAAE;UAC/EI,OAAO,EAAE;YACP,eAAe,EAAG,UAASP,KAAM;UACnC;QACF,CAAC,CAAC;QACF,MAAMQ,YAAY,GAAG,MAAMH,gBAAgB,CAACI,IAAI,CAAC,CAAC;QAClDd,WAAW,CAACa,YAAY,CAAC;;QAEzB;QACA;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IAED,IAAIP,MAAM,IAAIH,KAAK,EAAE;MACnBI,SAAS,CAAC,CAAC;IACb,CAAC,MAAM;MACLO,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvB,OAAA;MAAQsB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAClCvB,OAAA;QAAAuB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACT3B,OAAA;MAAMsB,SAAS,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzB,EAAA,CA7CID,iBAAiB;AAAA2B,EAAA,GAAjB3B,iBAAiB;AA+CvB,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}